<signature>
SendMessage(string)
SendMessage(string,object)
SendMessage(string,object,SendMessageOptions)
</signature>
Calls the method named /methodName/ on every [[MonoBehaviour]] in this game object.
The receiving method can choose to ignore the argument by having zero parameters.
If options is set to SendMessageOptions.RequireReceiver an error is printed if the message is not picked up by any component.

Note that messages will not be sent to inactive objects (ie, those that have been deactivated in the editor or with the ::ref::SetActive function).
CONVERTEXAMPLE
BEGIN EX
	// Calls the function ApplyDamage with a value of 5
	gameObject.SendMessage ("ApplyDamage", 5.0);
	
	// Every script attached to the game object 
	// that has an ApplyDamage function will be called.
	function ApplyDamage (damage : float) {
		print (damage);
	}
END EX
@param methodName The name of the method to call.
@param value An optional parameter value to pass to the called method.
@param options Should an error be raised if the method doesn't exist on the target object?
<signature>
SendMessage(string,SendMessageOptions)
</signature>
<txttag>
UNDOC
</txttag>
