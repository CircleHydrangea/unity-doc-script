Quaternions are used to represent rotations.
They are compact, don't suffer from gimbal lock and can easily be interpolated.
Unity internally uses Quaternions to represent all rotations.

Tthey are based on complex numbers and are not easy to understand intuitively.
You almost never access or modify individual Quaternion components (x,y,z,w);
most often you would just take existing rotations (e.g. from the [[Transform]]) and use them
to construct new rotations (e.g. to smoothly interpolate between two rotations).
The Quaternion functions that you use 99% of the time are:
Quaternion.LookRotation, Quaternion.Angle, Quaternion.Euler, Quaternion.Slerp, Quaternion.FromToRotation, and Quaternion.identity. (The other functions are only for exotic uses.)

You can use the Quaternion.operator * to rotate one rotation by another, or to rotate a vector by a rotation.