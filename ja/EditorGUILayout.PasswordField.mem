<signature>
PasswordField(string,GUILayoutOption[])
PasswordField(string,GUIStyle,GUILayoutOption[])
PasswordField(string,string,GUILayoutOption[])
PasswordField(string,string,GUIStyle,GUILayoutOption[])
PasswordField(GUIContent,string,GUILayoutOption[])
PasswordField(GUIContent,string,GUIStyle,GUILayoutOption[])
</signature>
Make a text field where the user can enter a password.
This works just like GUILayout.PasswordField, but correctly responds to select all, etc. in the editor,
and it can have an optional label in front.

{img EditorGUILayoutPasswordField.png}\\
''Simple window that visualizes what you have typed in the password field.''
BEGIN EX
	// Editor Script that creates a password field and lets you visualize what have you
	// typed in a label.
	
	class EditorGUILayoutPasswordField extends EditorWindow {
		
		var text : String = "Some text here";
		
		@MenuItem("Examples/Editor Password field usage")
		static function Init() {
			var window = GetWindow(EditorGUILayoutPasswordField);
			window.Show();
		}
		
		function OnGUI() {
			text = EditorGUILayout.PasswordField("Type Something:",text);
			EditorGUILayout.LabelField("Written Text:", text);
		}
	}
END EX
@param label Optional label to display in front of the password field.
@param password The password to edit.
@param style Optional [[GUIStyle]].
@param options An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the /style/.<br>
SA: GUILayout::ref::Width, GUILayout::ref::Height, GUILayout::ref::MinWidth, GUILayout::ref::MaxWidth, GUILayout::ref::MinHeight, 
GUILayout::ref::MaxHeight, GUILayout::ref::ExpandWidth, GUILayout::ref::ExpandHeight.
@return The password entered by the user.
