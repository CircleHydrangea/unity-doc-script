<signature>
Render()
</signature>
手動でレンダリングを設定する
This will render the camera. It will use the camera's clear flags, target texture and all other settings.

The camera will send MonoBehaviour::pref::OnPreCull, MonoBehaviour::pref::OnPreRender &
MonoBehaviour::pref::OnPostRender to any scripts attached, and render any eventual image filters.

This is used for taking precise control of render order. To make use of this feature, create a 
camera and disable it. Then call Render on it.

You are not able to call the Render function from a camera that is currently rendering. If you wish to
do this create a copy of the camera, and make it match the original one using ::ref::CopyFrom.

SA: ::ref::RenderWithShader.
CONVERTEXAMPLE
BEGIN EX
	// Take a "screenshot" of a camera's Render Texture.
	function RTImage(cam: Camera) {
		// The Render Texture in RenderTexture.active is the one
		// that will be read by ReadPixels.
		var currentRT = RenderTexture.active;
		RenderTexture.active = cam.targetTexture;
		
		// Render the camera's view.
		cam.Render();
		
		// Make a new texture and read the active Render Texture into it.
		var image = new Texture2D(cam.targetTexture.width, cam.targetTexture.height);
		image.ReadPixels(new Rect(0, 0, cam.targetTexture.width, cam.targetTexture.height), 0, 0);
		
		// Replace the original active Render Texture.
		RenderTexture.active = currentRT;
		return image;
	}
END EX